"""revised User model, added Event model

Revision ID: 0ac45c8e0709
Revises: af49565f24ad
Create Date: 2025-10-01 23:54:03.108947

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "0ac45c8e0709"
down_revision: Union[str, None] = "af49565f24ad"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users", sa.Column("is_registered", sa.Boolean(), nullable=False)
    )
    op.alter_column(
        "users", "email", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "users", "first_name", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "users", "last_name", existing_type=sa.VARCHAR(), nullable=True
    )
    op.drop_column("users", "role")
    op.drop_column("users", "phone")
    op.drop_column("users", "dob")
    op.drop_column("users", "active")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column("active", sa.BOOLEAN(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "users",
        sa.Column("dob", sa.DATE(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "users",
        sa.Column("phone", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "users",
        sa.Column("role", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.alter_column(
        "users", "last_name", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "users", "first_name", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "users", "email", existing_type=sa.VARCHAR(), nullable=True
    )
    op.drop_column("users", "is_registered")
    # ### end Alembic commands ###
